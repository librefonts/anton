# Bake Begins!
### (1 of 6) Copy sources
$ cp -a /home/travis/build/fontdirectory/anton/METADATA.json /home/travis/build/fontdirectory/anton/builds/build
$ cp -a /home/travis/build/fontdirectory/anton/DESCRIPTION.en_us.html /home/travis/build/fontdirectory/anton/builds/build
$ cp -a src/Anton-VTT.ttf.ttx src/Anton-TTF.sfd src/Anton-VTT.ttf._p_r_e_p.ttx src/Anton-VTT.ttf._p_o_s_t.ttx src/Anton-VTT.ttf._n_a_m_e.ttx src/Anton-VTT.ttf._m_a_x_p.ttx src/Anton-VTT.ttf._l_o_c_a.ttx src/Anton-VTT.ttf._h_m_t_x.ttx src/Anton-VTT.ttf._h_h_e_a.ttx src/Anton-VTT.ttf._h_e_a_d.ttx src/Anton-VTT.ttf._g_l_y_f.ttx src/Anton-VTT.ttf._g_a_s_p.ttx src/Anton-VTT.ttf._f_p_g_m.ttx src/Anton-VTT.ttf._c_v_t.ttx src/Anton-VTT.ttf._c_m_a_p.ttx src/Anton-VTT.ttf.T_S_I__5.ttx src/Anton-VTT.ttf.T_S_I__3.ttx src/Anton-VTT.ttf.T_S_I__2.ttx src/Anton-VTT.ttf.T_S_I__1.ttx src/Anton-VTT.ttf.T_S_I__0.ttx src/Anton-VTT.ttf.O_S_2f_2.ttx src/Anton-VTT.ttf.GlyphOrder.ttx src/Anton-VTT.ttf.F_F_T_M_.ttx /home/travis/build/fontdirectory/anton/builds/build/sources
### (2 of 6) pyfontaine
### (3 of 6) Run upstream tests
$ bakery-lint.py upstream-repo sources
$ fontaine --collections subsets --text /home/travis/build/fontdirectory/anton/builds/build/sources/Anton-VTT.ttf.ttx /home/travis/build/fontdirectory/anton/builds/build/sources/Anton-TTF.sfd > fontaine.txt
WARNING: Please install [PyICU](https://pypi.python.org/pypi/PyICU) toenable [feature], perhaps with: pip install pyicu
pyfontaine error: Not a TrueType or OpenType font (bad sfntVersion)
pyfontaine process has been failed
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_contours(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_prepolation_glyph_points(): OK
bakery_lint.tests.upstream.test_prepolation.FontTestPrepolation.test_font_test_prepolation_glyph_names(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_component(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_mark_to_mark(): OK
bakery_lint.tests.upstream.test_diacritic.TestDiacritic.test_diacritic_made_as_own_glyphs(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_bakery_yaml_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_copyright_notices_same_across_family(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_description_html_exists(): OK
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_fontlog_txt_exists(): FAIL
bakery_lint.tests.upstream.test_check_upstream_sources.ProjectUpstreamTestCase.test_metadata_json_exists(): OK
$ bakery-lint.py upstream-ttx Anton-VTT.ttf.ttx
bakery_lint.tests.upstream.test_glyphname_does_not_contain_disallowed_chars.TestGlyphNameDoesNotContainsDisallowedChars.test_glyphname_does_not_contain_disallowed_chars(): FAIL
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): FAIL
$ mv /home/travis/build/fontdirectory/anton/builds/build/sources/Anton-VTT.ttf.ttx /home/travis/build/fontdirectory/anton/builds/build/sources/Anton-Regular.ttx
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_epar_in_keys(): FAIL
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_os2_in_keys(): OK
bakery_lint.tests.upstream.test_check_ttx_requirements.SourceTTXTest.test_ttx_doesnt_contain_duplicate_glyphs(): FAIL
bakery_lint.tests.upstream.test_check_ttx_fontfamily_recommendations.TTX_FontFamilyNamingTest.test_ttx_family_naming_recommendation(): OK
$ bakery-lint.py upstream Anton-TTF.sfd
bakery_lint.tests.upstream.test_font_filename_eq_familystyle.TestTTFSourceFontFileNameEqualsFamilyStyle.test_source_ttf_font_filename_equals_familystyle(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_has_rupee(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_A_a_glyph_instance(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_ended_ufo(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_folder(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_is_fsType_eq_1(): ERROR
bakery_lint.tests.upstream.test_check_ufo_requirements.UfoOpenTest.test_it_exists(): ERROR
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_familyname_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_fullfontname_less_than_64_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_consistof_allowed_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_postscriptname_less_than_30_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_stylename_less_than_32_chars(): OK
bakery_lint.tests.upstream.test_check_ufo_fontfamily_recommendations.TestUFOFontFamilyNamingTest.test_weight_value_range_between_250_and_900(): OK
### (4 of 6) Convert sources to TTF
$ ttx -d /home/travis/build/fontdirectory/anton/builds/build /home/travis/build/fontdirectory/anton/builds/build/sources/Anton-Regular.ttx
strippedname:/home/travis/build/fontdirectory/anton/builds/build/sources/Anton-TTF.sfd
Compiling "/home/travis/build/fontdirectory/anton/builds/build/sources/Anton-Regular.ttx" to "/home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf"...
Parsing 'GlyphOrder' table...
Parsing 'head' table...
Parsing 'hhea' table...
Parsing 'maxp' table...
Parsing 'OS/2' table...
Parsing 'hmtx' table...
Parsing 'cmap' table...
Parsing 'fpgm' table...
Parsing 'prep' table...
Parsing 'cvt ' table...
Parsing 'loca' table...
Parsing 'glyf' table...
Parsing 'name' table...
Parsing 'post' table...
Parsing 'gasp' table...
Parsing 'FFTM' table...
Parsing 'TSI0' table...
Parsing 'TSI1' table...
Parsing 'TSI2' table...
Parsing 'TSI3' table...
Parsing 'TSI5' table...
$ font2ttf.py sources/Anton-TTF.sfd Anton-TTF.ttf
### Test Anton-Regular.ttf
$ bakery-lint.py result Anton-Regular.ttf
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): FAIL
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): FAIL
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'TSI0'
  Ignoring 'TSI1'
  Ignoring 'TSI2'
  Ignoring 'TSI3'
  Ignoring 'TSI5'
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
Success: Generated OpenType-TTF (/home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf)
### Test Anton-TTF.ttf
$ bakery-lint.py result Anton-TTF.ttf
### (5 of 6) Generate METADATA.json (genmetadata.py)
$ genmetadata.py /home/travis/build/fontdirectory/anton/builds/build
{} exists
No Designer Name known, using Multiple Designers for now...
bakery_lint.tests.downstream.test_names_are_ascii_only.CheckNamesAreASCIIOnly.test_check_names_are_ascii_only(): OK
Original size: 159136\nGzip size: 42926
Family Name: Anton
PS Name: Anton
Full Name: Anton
Style: normal
Weight: 400
Filename: Anton-TTF.ttf
Copyright: Copyright (c) 2011 by vernon adams. All rights reserved.
Family Name: Anton
PS Name: Anton
Full Name: Anton
Style: normal
Weight: 400
Filename: Anton-Regular.ttf
Copyright: Copyright (c) 2011 by vernon adams. All rights reserved.
### (6 of 6) Run tests for METADATA.json
$ bakery-lint.py metadata METADATA.json
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_latin_ext(): FAIL
bakery_lint.tests.metadata_test.MetadataSubsetsListTest.test_charset_menu(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_more_than_500b(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_description_is_valid_html(): OK
bakery_lint.tests.downstream.test_gpos_table_has_kerning_info.CheckGposTableHasKerningInfo.test_gpos_table_has_kerning_info(): OK
bakery_lint.tests.downstream.test_gasp_table_value.CheckGaspTableType.test_check_gasp_table_type(): OK
$ bakery-gasp.py --set=15 /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
The following table(s) in the font have been ignored by FontForge
  Ignoring 'DSIG' digital signature table
The glyph named Omega is mapped to U+03A9.
But its name indicates it should be mapped to U+2126.
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_daltonmaag_catalogue(): FAIL
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontbureau_catalogue(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_paths_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_composite_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_allowed_numbers_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_duplicate_unicode_codepoints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_flipped_reference_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_anchors(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_missing_extrema_in_glyphs(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_overlapped_hints(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_integer_aligned(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_points_are_not_too_far_apart(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_hints_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_postscript_hasnt_limit_points_in_glyphs(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_referenced_glyphs_are_present(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_glyph_names(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_valid_length_instructions(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_glyph_intersect(): FAIL
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_validation_open_contours(): OK
bakery_lint.tests.downstream.test_fontforge_validation_state.FontForgeValidateStateTest.test_wrong_direction_in_glyphs(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalLinegapMetrics.test_metrics_linegaps_are_zero(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ bakery-vmet-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontscom_catalogue(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): FAIL
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ bakery-vmet-fix.py /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ bakery-vmet-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontshop_catalogue(): FAIL
Parameter              Anton-TTF.ttf    Anton-Regular.ttf    
ymax                   2408             2408                 
hhea.ascent            2408             2408                 
OS/2.sTypoAscender     2408             2408                 
OS/2.usWinAscent       2408             2408                 
ymin                   -674             -674                 
hhea.descent           -674             -674                 
OS/2.sTypoDescender    -674             -674                 
OS/2.usWinDescent      674              674                  
hhea.lineGap           0                0                    
OS/2.sTypoLineGap      0                0                    
hhea total             3082             3082                 
typo total             3082             3082                 
win total              3082             3082                 
UPM:Heights            2048:3082        2048:3082            
UPM:Heights %          150 %            150 %                


$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ bakery-vmet-fix.py /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
Parameter              Anton-TTF.ttf    Anton-Regular.ttf    
ymax                   2408             2408                 
hhea.ascent            2408             2408                 
OS/2.sTypoAscender     2408             2408                 
OS/2.usWinAscent       2408             2408                 
ymin                   -674             -674                 
hhea.descent           -674             -674                 
OS/2.sTypoDescender    -674             -674                 
OS/2.usWinDescent      674              674                  
hhea.lineGap           0                0                    
OS/2.sTypoLineGap      0                0                    
hhea total             3082             3082                 
typo total             3082             3082                 
win total              3082             3082                 
UPM:Heights            2048:3082        2048:3082            
UPM:Heights %          150 %            150 %                


bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalAscentMetrics.test_metrics_ascents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_fontsmith_catalogue(): OK
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): FAIL
$ bakery-dsig.py /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
bakery_lint.tests.downstream.test_check_vertical_metrics.CheckVerticalDescentMetrics.test_metrics_descents_equal_bbox(): OK
bakery_lint.tests.downstream.test_check_upm_heights_less_120.TestCheckUPMHeightsLess120.test_check_upm_heigths_less_120(): FAIL
bakery_lint.tests.downstream.test_check_unused_glyph_data.CheckUnusedGlyphData.test_check_unused_glyph_data(): ERROR
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
$ bakery-encode-glyphs-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
### Optimize TTF Anton-Regular.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_houseind_catalogue(): OK
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
bakery_lint.tests.downstream.test_check_unencoded_glyph.TestFontUnencodedGlyph.test_font_unencoded_glyphs(): FAIL
bakery_lint.tests.downstream.test_check_panose_identification.CheckPanoseIdentification.test_check_panose_identification(): OK
bakery_lint.tests.downstream.test_check_os2_width_class.CheckOS2WidthClass.test_check_os2_width_class(): OK
bakery_lint.tests.downstream.test_check_no_problematic_formats.CheckNoProblematicFormats.test_check_no_problematic_formats(): OK
bakery_lint.tests.downstream.test_check_nbsp_width_matches_sp_width.CheckNbspWidthMatchesSpWidth.test_check_nbsp_width_matches_sp_width(): OK
bakery_lint.tests.downstream.test_check_names_same_across_platforms.CheckNamesSameAcrossPlatforms.test_check_names_same_across_platforms(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckStyleNameRecommendation.test_check_stylename_is_under_recommendations(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): FAIL
$ bakery-opentype-fix.py /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFamilyNameRecommendation.test_check_opentype_familyname(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTStyleNameRecommendation.test_check_opentype_stylename(): OK
bakery_lint.tests.downstream.test_check_name_table_recommendation.CheckOTFullNameRecommendation.test_check_opentype_fullname(): OK
bakery_lint.tests.downstream.test_check_magic_prep_code.CheckMagicPREPByteCode.test_prep_magic_code(): FAIL
bakery_lint.tests.downstream.test_check_license_included.CheckLicenseIncluded.test_license_included_in_font_names(): OK
bakery_lint.tests.downstream.test_check_italic_angle_agreement.CheckItalicAngleAgreement.test_check_italic_angle_agreement(): OK
bakery_lint.tests.downstream.test_check_hmtx_hhea_max_advance_width_agreement.CheckHmtxHheaMaxAdvanceWidthAgreement.test_check_hmtx_hhea_max_advance_width_agreement(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_euro(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_nbsp(): OK
bakery_lint.tests.downstream.test_check_glyph_existence.CheckGlyphExistence.test_space(): OK
bakery_lint.tests.downstream.test_check_glyf_table_length.CheckGlyfTableLength.test_check_glyf_table_length(): FAIL
bakery_lint.tests.downstream.test_check_full_font_name_begins_with_family_name.CheckFullFontNameBeginsWithFamilyName.test_check_full_font_name_begins_with_family_name(): OK
bakery_lint.tests.downstream.test_check_fontname_matches_macstyle.CheckFontNameEqualToMacStyleFlags.test_fontname_is_equal_to_macstyle(): FAIL
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasDsigTable.test_check_font_has_dsig_table(): OK
bakery_lint.tests.downstream.test_check_font_tables.CheckFontHasNotKernTable.test_no_kern_table_exists(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): FAIL
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFsTypeIsNotSet.test_is_fstype_not_set(): OK
$ bakery-fstype-fix.py --autofix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.fix /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_em_is_1000(): FAIL
$ ls -l 'Anton-Regular.ttf'* # look at the size savings of that subset process
Anton-Regular.ttf.opt: 35300 bytes
Anton-Regular.ttf: 159804 bytes
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf.opt /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_file_is_font(): OK
### Autohint TTFs (ttfautohint) Anton-Regular.ttf
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_font_is_font(): OK
bakery_lint.tests.downstream.test_check_font_agreements.CheckFontAgreements.test_latin_file_exists(): FAIL
$ ls -l /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf: 35300 bytes
/home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.autohint.ttf: 44968 bytes
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.autohint.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
### Subset TTFs (pyftsubset) Anton-Regular.ttf
Generate Anton-Regular.latin
Generate Anton-Regular.menu
strippedname:/home/travis/build/fontdirectory/anton/builds/build/Anton-Regular.ttf
### Optimize TTF Anton-TTF.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_myfonts_catalogue(): FAIL
$ ls -l 'Anton-TTF.ttf'* # look at the size savings of that subset process
Anton-TTF.ttf.opt: 38052 bytes
Anton-TTF.ttf: 41636 bytes
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf.opt /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
### Autohint TTFs (ttfautohint) Anton-TTF.ttf
$ ls -l /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.*ttf # look at the size savings of that subset process
/home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf: 38052 bytes
/home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.autohint.ttf: 55264 bytes
$ mv /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.autohint.ttf /home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
### Subset TTFs (pyftsubset) Anton-TTF.ttf
bakery_lint.tests.metadata_test.MetadataTest.test_does_not_familyName_exist_in_veer_catalogue(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_family_is_listed_in_gwf(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_atleast_latin_menu_subsets_exist(): OK
Generate Anton-TTF.latin
Generate Anton-TTF.menu
strippedname:/home/travis/build/fontdirectory/anton/builds/build/Anton-TTF.ttf
/home/travis/virtualenv/python2.7.8/lib/python2.7/site-packages/bakery_lint/tests/metadata_test.py:141: UnicodeWarning: Unicode equal comparison failed to convert both arguments to Unicode - interpreting them as being unequal
  self.assertTrue(designer in designers,
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_designer_exists_in_profiles_csv(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_items_dicts(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_fonts_no_dupes(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_has_unique_style_weight_pairs(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_license(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_no_unknown_top_keys(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_subsets_key_list(): OK
bakery_lint.tests.metadata_test.MetadataTest.test_metadata_top_keys_types(): FAIL
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_contains_correct_rfn(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_is_consistent_across_family(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_copyright_matches_pattern(): OK
bakery_lint.tests.downstream.test_metadata_font_copyright.CheckMetadataContainsReservedFontName.test_metadata_copyright_size(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_font_name_matches_family(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_family_values_are_all_the_same(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_filename_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_font_have_regular(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fonts_fields_have_fontname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_is_equal_to_internal_font_fullname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_fullname_matches_postScriptName(): OK
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_postScriptName_matches_ttf_fontname(): ERROR
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_400(): FAIL
bakery_lint.tests.downstream.test_metadata_agreements.CheckMetadataAgreements.test_metadata_regular_is_normal(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_copyrighttxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_description_exists(): OK
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_fontlogtxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_text_files_exist.CheckTextFilesExist.test_licensetxt_exists(): FAIL
bakery_lint.tests.downstream.test_check_subsets_exists.CheckSubsetsExist.test_check_subsets_exists(): FAIL
bakery_lint.tests.downstream.test_check_monospace_agreements.CheckMonospaceAgreement.test_check_monospace_agreement(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckItalicStyleMatchesMacStyle.test_check_italic_style_matches_names(): OK
bakery_lint.tests.downstream.test_check_metadata_style_matches_names.CheckNormalStyleMatchesMacStyle.test_check_normal_style_matches_names(): ERROR
bakery_lint.tests.downstream.test_check_metadata_matches_nametable.CheckMetadataMatchesNameTable.test_check_metadata_matches_nametable(): ERROR
bakery_lint.tests.downstream.test_check_metadata_fields.CheckMetadataFields.test_check_metadata_fields(): OK
bakery_lint.tests.downstream.test_check_menu_contains_proper_glyphs.CheckMenuSubsetContainsProperGlyphs.test_check_menu_contains_proper_glyphs(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_encodings_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_names_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_glyph_consistency.CheckGlyphConsistencyInFamily.test_the_same_number_of_glyphs_across_family(): ERROR
bakery_lint.tests.downstream.test_check_font_name_not_in_camelcase.CheckFontNameNotInCamelCase.test_fontname_not_in_camel_case(): OK
bakery_lint.tests.downstream.test_check_files_menu_agreements.CheckFontsMenuAgreements.test_menu_file_agreement(): FAIL
bakery_lint.tests.downstream.test_check_familyname_matches_fontnames.CheckFamilyNameMatchesFontNames.test_check_familyname_matches_fontnames(): OK
bakery_lint.tests.downstream.test_check_canonical_weights.CheckCanonicalWeights.test_check_canonical_weights(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckPostScriptNameMatchesWeight.test_postscriptname_contains_correct_weight(): FAIL
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFontWeightSameAsInMetadata.test_font_weight_same_as_in_metadata(): ERROR
bakery_lint.tests.downstream.test_check_canonical_weights.CheckFullNameEqualCanonicalName.test_metadata_contains_current_font(): ERROR
bakery_lint.tests.downstream.test_check_canonical_styles.CheckCanonicalStyles.test_check_canonical_styles(): ERROR
bakery_lint.tests.downstream.test_check_canonical_filenames.CheckCanonicalFilenames.test_check_canonical_filenames(): FAIL
{
  "name": "Anton", 
  "designer": "Vernon Adams", 
  "license": "OFL", 
  "visibility": "External", 
  "category": "Sans Serif", 
  "size": 23324, 
  "fonts": [
    {
      "name": "Anton", 
      "postScriptName": "Anton", 
      "fullName": "Anton", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Anton-TTF.ttf", 
      "copyright": "Copyright (c) 2011 by vernon adams. All rights reserved."
    }, 
    {
      "name": "Anton", 
      "postScriptName": "Anton", 
      "fullName": "Anton", 
      "style": "normal", 
      "weight": 400, 
      "filename": "Anton-Regular.ttf", 
      "copyright": "Copyright (c) 2011 by vernon adams. All rights reserved."
    }
  ], 
  "subsets": [
    "latin"
  ], 
  "dateAdded": "2011-02-23"
}
